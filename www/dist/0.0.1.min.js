function authReq($rootScope,$state){$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){"AUTH_REQUIRED"===error&&$state.go("login")})}function ionicPlat($rootScope,$ionicPlatform){$ionicPlatform.ready(function(){if(window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleLightContent(),ionic.Platform.isWebView()){var deviceInfo=cordova.require("cordova/plugin/DeviceInformation");deviceInfo.get(function(result){$rootScope.deviceInfo=JSON.parse(result)},function(){console.log("error")});var localPushToken=JSON.parse(localStorage.getItem("_raix:push_token"));if(!localPushToken)var interPush=setInterval(function(){"undefined"!=typeof PushNotification&&(clearInterval(interPush),Push.Configure({gcm:{projectNumber:"482046828327"},bagde:!0,sound:!0,alert:!0}))},300);Push.addListener("error",function(err){console.log(err)}),Push.addListener("token",function(token){}),Push.addListener("register",function(evt){}),Push.addListener("alert",function(notification){})}})}function initRoute($stateProvider,$urlRouterProvider){$stateProvider.state("tab",{url:"/tab","abstract":!0,templateUrl:"js/templates/tabs.html",resolve:{user:["$meteor",function($meteor){return $meteor.requireUser()}],chats:["$meteor",function($meteor){return $meteor.subscribe("chats")}]}}),$urlRouterProvider.otherwise("/tab/chats")}function calendar(){return function(time){return time?moment(time).calendar(null,{lastDay:"[Yesterday]",sameDay:"LT",lastWeek:"dddd",sameElse:"DD/MM/YY"}):void 0}}function chatName(){return function(chat){if(chat){var otherId=_.without(chat.userIds,Meteor.userId())[0],otherUser=Meteor.users.findOne(otherId),hasName=otherUser&&otherUser.profile&&otherUser.profile.name;return hasName?otherUser.profile.name:"PLACE HOLDER"}}}function chatPicture(){return function(chat){if(chat){var otherId=_.without(chat.userIds,Meteor.userId())[0],otherUser=Meteor.users.findOne(otherId),hasPicture=otherUser&&otherUser.profile&&otherUser.profile.picture;return hasPicture?otherUser.profile.picture:"/img/user-default.svg"}}}function input($timeout){function link(scope,element,attrs){element.bind("focus",function(e){scope.onFocus&&$timeout(function(){scope.onFocus()})}),element.bind("blur",function(e){scope.onBlur&&$timeout(function(){scope.onBlur()})}),element.bind("keydown",function(e){13==e.which&&(scope.returnClose&&element[0].blur(),scope.onReturn&&$timeout(function(){scope.onReturn()}))})}var directive={restrict:"E",scope:{returnClose:"=",onReturn:"&",onFocus:"&",onBlur:"&"},link:link};return directive}function ChatDetailConfig($stateProvider){$stateProvider.state("tab.chat-detail",{url:"/chats/:chatId",views:{"tab-chats":{templateUrl:"js/controllers/chat/chat-detail.html",controller:"ChatDetailCtrl"}}})}function ChatDetailCtrl($scope,$stateParams,$timeout,$meteor,$ionicScrollDelegate){function sendMessage(){_.isEmpty($scope.data.message)||($meteor.call("newMessage",{text:$scope.data.message,chatId:chatId}),delete $scope.data.message)}function inputUp(){isIOS&&($scope.data.keyboardHeight=216),$timeout(function(){$ionicScrollDelegate.$getByHandle("chatScroll").scrollBottom(!0)},300)}function inputDown(){isIOS&&($scope.data.keyboardHeight=0),$ionicScrollDelegate.$getByHandle("chatScroll").resize()}function closeKeyboard(){}var chatId=$stateParams.chatId,isIOS=ionic.Platform.isWebView()&&ionic.Platform.isIOS();$scope.chat=$scope.$meteorObject(Chats,chatId,!1),$scope.messages=$scope.$meteorCollection(function(){return Messages.find({chatId:chatId})},!1),$scope.data={},$scope.$watchCollection("messages",function(oldVal,newVal){var animate=oldVal.length!==newVal.length;$ionicScrollDelegate.$getByHandle("chatScroll").scrollBottom(animate)}),$scope.sendMessage=sendMessage,$scope.inputUp=inputUp,$scope.inputDown=inputDown,$scope.closeKeyboard=closeKeyboard}function ChatsConfig($stateProvider){$stateProvider.state("tab.chats",{url:"/chats",views:{"tab-chats":{templateUrl:"js/controllers/chat/tab-chats.html",controller:"ChatsCtrl"}}})}function ChatsCtrl($scope,$meteor,$ionicModal){function openNewChatModal(){$scope.modal.show()}function remove(chat){$meteor.call("removeChat",chat._id)}$scope.chats=$scope.$meteorCollection(Chats,!1),$ionicModal.fromTemplateUrl("js/controllers/chat/new-chat.html",{scope:$scope}).then(function(modal){$scope.modal=modal}),$scope.$on("$destroy",function(){$scope.modal.remove()}),$scope.openNewChatModal=openNewChatModal,$scope.remove=remove}function NewChatCtrl($scope,$state,$meteor){function hideModal(){$scope.modal.hide()}function newChat(userId){var chat=Chats.findOne({userIds:{$all:[Meteor.userId(),userId]}});return chat?goToChat(chat._id):void $meteor.call("newChat",userId).then(goToChat)}function goToChat(chatId){return hideModal(),$state.go("tab.chat-detail",{chatId:chatId})}$scope.$meteorSubscribe("users").then(function(){$scope.users=$scope.$meteorCollection(function(){return Meteor.users.find({_id:{$ne:Meteor.userId()}})},!1)}),$scope.hideModal=hideModal,$scope.newChat=newChat}function ContactsConfig($stateProvider){$stateProvider.state("tab.contacts",{url:"/contacts",views:{"tab-contacts":{templateUrl:"js/controllers/contact/tab-contacts.html",controller:"ContactsCtrl"}}})}function ContactsCtrl($scope,$meteor,$state,$ionicModal,$ionicPopup,$ionicLoading){function newChat(user){if(user.activate){var chat=Chats.findOne({userIds:{$all:[Meteor.userId(),user._id]}});if(chat)return goToChat(chat._id);$meteor.call("newChat",user._id).then(goToChat)}else activate(user)}function goToChat(chatId){return $state.go("tab.chat-detail",{chatId:chatId})}function activate(user){var confirmPopup=$ionicPopup.confirm({title:"User Activation",template:"<div>Change activation for "+user.emails[0].address+"?</div>",cssClass:"text-center",okText:"Yes",okType:"button-positive button-clear",cancelText:"Cancel",cancelType:"button-dark button-clear"});confirmPopup.then(function(res){res&&($ionicLoading.show({template:"Registering Info..."}),$meteor.call("changeUserActivation",user._id).then(function(result){$ionicLoading.hide()})["catch"](handleError))})}function handleError(err){$log.error("profile save error ",err),$ionicPopup.alert({title:err.reason||"Save failed",template:"Please try again",okType:"button-positive button-clear"})}$scope.$meteorSubscribe("users").then(function(){$scope.users=$scope.$meteorCollection(function(){var me=Meteor.user();return me&&!me.admin?Meteor.users.find({_id:{$ne:Meteor.userId()},activate:!0}):Meteor.users.find({_id:{$ne:Meteor.userId()}})},!1)}),$scope.newChat=newChat,$scope.activate=activate}function ConfirmationConfig($stateProvider){$stateProvider.state("confirmation",{url:"/confirmation/:phone",templateUrl:"js/controllers/login/confirmation.html",controller:"ConfirmationCtrl"})}function ConfirmationCtrl($scope,$state,$ionicPopup,$log){function verify(){_.isEmpty($scope.data.code)||Accounts.verifyPhone($scope.phone,$scope.data.code,function(err){return err?handleError(err):void $state.go("profile")})}function handleError(err){$log.error("Verfication error ",err),$ionicPopup.alert({title:err.reason||"Verfication failed",template:"Please try again",okType:"button-positive button-clear"})}$scope.phone=$state.params.phone,$scope.data={},$scope.verify=verify}function LoginConfig($stateProvider){$stateProvider.state("login",{url:"/login",templateUrl:"js/controllers/login/login.html",controller:"LoginCtrl"})}function LoginCtrl($rootScope,$scope,$meteor,$state,$ionicLoading,$ionicPopup,$log){function login(){$ionicLoading.show({template:"Logging In..."}),$meteor.loginWithPassword($scope.data.email,$scope.data.password,function(err){return $ionicLoading.hide(),err?handleError(err):void $state.go("profile")})}function handleError(err){$log.error("Login error ",err),$ionicPopup.alert({title:err.reason||"Login failed",template:"Please try again",okType:"button-positive button-clear"})}if($rootScope.deviceInfo&&$rootScope.deviceInfo.phoneNo){var cb=function(){$state.go("profile")};Accounts.callLoginMethod({methodArguments:[$rootScope.deviceInfo],userCallback:cb})}$scope.data={},$scope.login=login}function PendingConfig($stateProvider){$stateProvider.state("pending",{url:"/pending",templateUrl:"js/controllers/login/pending.html",controller:"PendingCtrl"})}function PendingCtrl($rootScope,$scope,$state,$ionicLoading,$ionicPopup,$log){}function RegisterConfig($stateProvider){$stateProvider.state("register",{url:"/register",templateUrl:"js/controllers/login/register.html",controller:"RegisterCtrl"})}function RegisterCtrl($rootScope,$scope,$state,$ionicLoading,$ionicPopup,$log){function register(){var confirmPopup=$ionicPopup.confirm({title:"Registeration confirmation",template:"<div>Is your information correct?</div>",cssClass:"text-center",okText:"Yes",okType:"button-positive button-clear",cancelText:"edit",cancelType:"button-dark button-clear"});confirmPopup.then(function(res){res&&($ionicLoading.show({template:"Registering Info..."}),Accounts.createUser($scope.data,function(err){return $ionicLoading.hide(),err?handleError(err):void $state.go("pending")}))})}function handleError(err){console.log(err),"Login forbidden"==err.reason?$state.go("pending"):($log.error("Registeration error ",err),$ionicPopup.alert({title:err.reason||"Registeration failed",template:"Please try again",okType:"button-positive button-clear"}))}$scope.data={},$scope.data.profile={},$scope.register=register}function ProfileConfig($stateProvider){$stateProvider.state("profile",{url:"/profile",templateUrl:"js/controllers/setting/profile.html",controller:"ProfileCtrl",resolve:{user:["$meteor",function($meteor){return $meteor.requireUser()}]}})}function ProfileCtrl($scope,$state,$meteor,$ionicLoading,$ionicPopup,$log){function updateName(){_.isEmpty($scope.data.name)||$meteor.call("updateName",$scope.data.name).then(function(){$state.go("tab.chats")})["catch"](handleError)}function handleError(err){$log.error("profile save error ",err),$ionicPopup.alert({title:err.reason||"Save failed",template:"Please try again",okType:"button-positive button-clear"})}var user=Meteor.user(),name=user&&user.profile?user.profile.name:"";$scope.data={name:name},$scope.updateName=updateName}function SettingsConfig($stateProvider){$stateProvider.state("tab.settings",{url:"/settings",views:{"tab-settings":{templateUrl:"js/controllers/setting/tab-settings.html",controller:"SettingsCtrl"}}})}function SettingsCtrl($scope,$meteor,$state){function logout(){$meteor.logout().then(function(){$state.go("login")})}$scope.logout=logout}var test;angular.module("chatty",["ionic","angular-meteor","angularMoment","chattyTemplates"]),angular.module("chatty").run(authReq),Chats=new Mongo.Collection("chats"),Messages=new Mongo.Collection("messages"),angular.module("chatty").run(ionicPlat),angular.module("chatty").config(initRoute),Meteor.methods({newChat:function(otherId){check(otherId,String);var otherUser=Meteor.users.findOne(otherId);if(!otherUser)throw Meteor.Error("user-not-exists","Chat's user not exists");var chat={userIds:[this.userId,otherId],createdAt:new Date};return Chats.insert(chat)},removeChat:function(chatId){return check(chatId,String),Messages.remove({chatId:chatId}),Chats.remove({_id:chatId})},newMessage:function(message){check(message,{text:String,chatId:String}),message.timestamp=new Date,message.userId=this.userId;var messageId=Messages.insert(message);return Chats.update(message.chatId,{$set:{lastMessage:message}}),messageId}}),angular.module("chatty").filter("calendar",calendar),angular.module("chatty").filter("chatName",chatName),angular.module("chatty").filter("chatPicture",chatPicture),angular.module("chatty").directive("input",input),angular.module("chatty").config(ChatDetailConfig).controller("ChatDetailCtrl",ChatDetailCtrl),angular.module("chatty").config(ChatsConfig).controller("ChatsCtrl",ChatsCtrl),angular.module("chatty").controller("NewChatCtrl",NewChatCtrl),angular.module("chatty").config(ContactsConfig).controller("ContactsCtrl",ContactsCtrl),angular.module("chatty").config(ConfirmationConfig).controller("ConfirmationCtrl",ConfirmationCtrl),angular.module("chatty").config(LoginConfig).controller("LoginCtrl",LoginCtrl),angular.module("chatty").config(PendingConfig).controller("PendingCtrl",PendingCtrl),angular.module("chatty").config(RegisterConfig).controller("RegisterCtrl",RegisterCtrl),angular.module("chatty").config(ProfileConfig).controller("ProfileCtrl",ProfileCtrl),angular.module("chatty").config(SettingsConfig).controller("SettingsCtrl",SettingsCtrl);